План
Ниже представлен подробный пошаговый план, отражающий все функции, указанные в техническом задании (ТЗ) для платформы “Паппи”, строго в рамках описанного функционала, без добавления лишних опций.
1. Общая структура проекта и подготовка

    Создать Django-проект (например, puppy_project) и сконфигурировать его:
        Настроить базу данных (для старта можно взять SQLite, позже — PostgreSQL).
        В settings.py подключить стандартные приложения (auth, sessions, staticfiles и т.п.).
        Продумать, используем ли мы DRF (для мобильного клиента или SPA) или чисто Django-шаблоны. В ТЗ не указано, что нужен мобильный API — поэтому можно ограничиться серверным рендерингом (HTML/CSS/JS).

    Создать основное приложение (например, core), либо несколько приложений:
        accounts (регистрация/авторизация, профили, роли пользователей).
        announcements (объявления: животные, услуги, товары, потеряшки, вязка).
        messaging (сообщения, чаты).
        reviews (отзывы, рейтинги).
        cart (корзина товаров) – по желанию можно объединить с announcements, но лучше отдельно.
        payments (если понадобится оплата подписки для специалистов и VIP) – либо сделать заглушку.

    Обеспечить работу со статикой (CSS/JS) и медиаданными (фотографии животных, товаров и т. д.). В settings.py задать STATIC_URL, MEDIA_URL, пути хранения.

    Подключить сервис для SMS (или сделать заглушку), чтобы реализовать логику кода при авторизации по телефону. Также подготовить возможность входа через Госуслуги (либо тоже сделать заглушку/симуляцию, если нет реальных данных для OAuth).

2. Модель и логика пользователей (Типы пользователей и верификация)
2.1. Типы пользователей и поля

    Модель User:
        Наследуется от AbstractUser (или AbstractBaseUser, если хотим кастомную аутентификацию).
        Поля:
            phone (уникальный, основное поле для авторизации по SMS).
            Флаги/статусы:
                is_verified — подтверждён ли пользователь документами.
                is_seller — стал ли пользователь продавцом (это даёт право размещать платные объявления).
                is_specialist — специалист (подписка).
                is_shelter — приют (назначается вручную админом).
            Прочие поля (email, username и т.д.) при необходимости.
        При регистрации пользователь всегда создаётся как «Покупатель» (т. е. is_seller=False, is_shelter=False, is_specialist=False).

2.2. Регистрация и авторизация

    Регистрация по номеру телефона:
        Форма/страница: вводит телефон → отправляем код (через SMS-сервис или заглушку) → пользователь вводит код → создаём аккаунт.
        После первого входа предлагаем стать продавцом (онбординг) или пропустить.

    Авторизация по номеру телефона:
        Ввод телефона → если пользователь есть, отправляем код → при вводе проверяем код → логиним.

    Авторизация через Госуслуги:
        Добавить кнопку «Войти через Госуслуги» → OAuth (при успешном ответе создаём / логиним пользователя).
        Детали интеграции зависят от наличия официального протокола.

    Переход из покупателя в продавца:
        Пользователь нажимает «Стать продавцом» → форма с загрузкой/вводом документов → создаём заявку на верификацию.
        Модератор проверяет (48 часов). Если всё ок, is_seller=True.
        Если пользователь выбирает «Специалист», то дополнительно is_specialist=True и оформляется подписка (оплата/заглушка).

    Приют:
        is_shelter назначается админом вручную. Такой пользователь не платит за объявления, может прикрепить реквизиты для донатов.

3. Навигация (боковое меню и состояния)

    Бургер-меню:
        В неавторизованном состоянии: кнопки «Войти / Зарегистрироваться», просмотр каталога (животные, товары, специалисты), «Потеряшки», «Контакты» и т.п.
        В авторизованном:
            «Мои объявления», «Сообщения», «Избранное», «Корзина (для товаров)», «Профиль», «Выйти».
        У пользователя-продавца / приюта меню дополняется пунктами для управления объявлениями.
        Добавлять/убирать ссылки в зависимости от роли (is_seller, is_specialist, is_shelter).

    Анимация и UI: ТЗ лишь упоминает пример бокового меню, реализация на HTML/CSS/JS.

4. Котопсиндер (односторонний лайк) и логика «свайпа»

    Экран «Синдер»:
        Показываются карточки (животные, специалисты) поочерёдно.
        Действия:
            «Лайк» (свайп вправо или кнопка) — объявление попадает в «лайкнутые», в разделе «Сообщения» появляется диалог с автором объявления.
            «Дизлайк» (свайп влево или кнопка) — пропускаем карточку.
            «Назад» (стрелка) — возврат к предыдущей карточке, если «пропустили» случайно.
        При лайке сверху показывать алерт «Вы увидите свой лайк в Сообщениях». При нажатии — открывать соответствующий диалог.

    Техническая реализация:
        Можно хранить лайки в отдельной модели Like(user, announcement, created_at).
        При лайке сразу создаём «диалог» в messaging (если ещё нет).

    Отсутствие обоюдного лайка:
        Именно для животных и специалистов нет механики «обоюдного лайка», но для вязки будет другая логика (см. п. 11).

5. Каталогизация
5.1. Общий каталог (животные, специалисты)

    Главная страница:
        Промо-баннер (управляемый: можно выставлять текст, ссылку).
        Блок быстрых карточек категорий (несколько популярных категорий: собаки, кошки, товары, услуги).
        Карусель объявлений «Животные» (5-10), затем ссылка «Все животные».
        Карусель «Специалисты» (5-10), затем «Все специалисты».
        Кнопка «Все категории» ведёт на страницу со списком категорий → подкатегории → отфильтрованный каталог.

    Отфильтрованный каталог:
        Для «Животных» — фильтры (порода, возраст, пол и т.п.).
        Для «Специалистов» — фильтр по типу услуги.
        Можно выбирать вид отображения (карточки, список и т.п.).
        Иконка шестерёнки (фильтры) в навбаре.

5.2. Каталог товаров (Pet-a-Porter)

    Список товаров:
        Фильтрация по категориям (корма, игрушки и т.д.).
        При просмотре карточки товара: кнопка «В корзину».

    Корзина:
        Отдельное место в навбаре каталога + доступна в боковом меню.
        При добавлении товара → модалка «Товар добавлен».
        В корзине можно менять кол-во, удалять товары, переходить к оформлению заказа (если нужна платёжная система, добавить — иначе заглушка).

6. Избранное

    Добавить в избранное можно любое объявление (животные, товары, специалисты).
    Страница «Избранное»:
        Табы: «Все», «Животные», «Товары», «Специалисты» (или 3 вкладки).
        При снятии объявления с публикации — отображать, что «объявление не активно».
        Нажатие по карточке ведёт на страницу объявления, нажатие на сердечко — убирает из избранного.

7. Регистрация в качестве продавца (верификация)

    Онбординг:
        После первой регистрации выводим предложение стать продавцом. Если согласен:
            Открываем форму сбора данных (юр. лицо/ИП/физ. лицо), заполняем поля (ФИО, ИНН, адрес и т.д.), можно использовать DaData.
            На 4-5 шаге загрузка документов (сканы).
        После отправки формы → «Заявка на проверке (до 48 часов)».
        Если пользователь попытается создать объявление о продаже до окончания проверки → показать экран «Заявка на проверке».
    Разграничение по подписке:
        Если пользователь хочет стать «Специалистом», предупреждаем, что будет списываться плата (подписка).
        Активируем is_specialist только после согласия с условиями и/или оплаты (заглушка/реальная интеграция).

8. Объявления
8.1. «Мои объявления»

    Раздел на сайте/app, где пользователь видит все свои объявления (разбито по вкладкам):
        Ожидание действий: если срок публикации истёк или чего-то не хватает (документов).
        На проверке: каждое новое объявление туда попадает (до 48 ч).
        Активные: прошли проверку, опубликованы.
        Черновики: пользователь сохранил, но не опубликовал.
        Архив: снятые с публикации, удалённые, заблокированные.

8.2. Создание объявления

    Типы:
        Продажа (животных, товаров, услуг).
        Вязка (для владельцев «мальчиков»).
        Потеряшки.
    Каждый тип имеет свой набор полей. Визуально реализовать через радиокнопки «Что вы хотите разместить?» → форма соответствующих полей.
    При сохранении:
        Проверяем статус пользователя (если is_seller=False, но «потеряшка» — разрешить; если «продавец» — разрешить остальные).
        Если всё ок → отправляем объявление «На проверку» (модерацией).
        Модалки/пояснения согласно макету ТЗ.

9. Сообщения (чат)

    Общий список чатов:
        Табы по типам объявлений: «Покупка/Продажа», «Вязка», «Потеряшки».
        Сверху всегда «Поддержка», а если есть VIP-подписка — «VIP-консьерж».
    Механики в чате:
        Обмен текстовыми сообщениями, изображениями.
        Возможность созвониться (опционально, можно делать заглушку).
        Продавец может выставлять счёт — покупатель выбирает способ доставки и оплаты (если нужно).
        Продавец может отправить геолокацию, покупатель — согласиться и т.д.

10. Настройка профиля

    Профиль покупателя:
        Поля: ФИО, телефон, email, список личных животных (не на продажу, а просто в профиле), адреса доставки.
        Рейтинг покупателя (продавцы ставят после сделки).

    Профиль продавца:
        «Портфолио продавца»: инфо об организации, опыт, фото/видео, сертификаты.
        Отображение своих объявлений с возможностью переключения «заводчик»/«специалист».

    Профиль приюта:
        «Портфолио приюта»: описание, реквизиты для пожертвований, кнопка «Пожертвовать» → шторка с реквизитами.

11. Отзывы (Рейтинг)

    Модель отзывов: Review(author, target_user, rating, text, badges, created_at).
    Лейблы/бейджи: набор мини-характеристик (например, «Оперативная доставка», «Хорошая коммуникация»), зависят от типа объявления.
    Возможность комментировать отзыв (продавец может ответить).
    Жалобы на отзыв (указать причину, отправить модератору).
    Низкие оценки (<3) отправляются на особый контроль (модерацию).

12. Вязка

    Условия:
        Объявления о вязке размещают владельцы кобеля (пол = «мужской»).
        У «девочки» (самки) должна быть механика ответного лайка (это уже двусторонняя механика, в отличие от обычного «котопсиндера»).
    Отдельный «синдер»:
        Можно сделать отдельную страницу «Вязка», где есть свайпы.
        При взаимном лайке формируется «пара», в «Сообщениях» появляется чат.
    Добавление животного в «Вязку»:
        Либо из списка «Мои животные» (в профиле покупателя/продавца), либо создать новое.

13. VIP-консьерж

    Страница с 3 пакетами (лендинг):
        Описание пакетов, стоимость.
        Кнопка «Оформить» → оплата (или заглушка).
    После оплаты:
        В «Сообщениях» появляется чат с VIP-консьержем.
        Пользователь может обращаться туда за персональной поддержкой.

14. Потеряшки

    Отдельный раздел для объявлений «Потерян/Найден».
        Отдельный каталог с фильтром (вид животного, место пропажи и т. д.).
    Создание объявления: всегда доступно даже для непродавцов (покупателей), без монетизации.
    Соц. функция, не берём комиссию, размещение бесплатно.

15. Модерация и админка

    Проверка объявлений:
        Все объявления после создания попадают «На проверку» (до 48 ч).
        Модератор (через админ-панель Django) одобряет, блокирует или отправляет на доработку.
    Управление статусами:
        «Активно», «Черновик», «Заблокировано», «Архив».
    Управление пользователями:
        Подтверждать заявки на верификацию в продавцы.
        Назначать приют (выставлять is_shelter=True).
    Жалобы (на отзывы, объявления) — тоже через админку.

16. Порядок и этапы реализации (с учётом ТЗ)

Ниже краткая дорожная карта разработки, строго в рамках ТЗ:

    База и пользователи
        Настроить Django-проект.
        Создать модель User с нужными флагами (is_seller, is_shelter, is_specialist).
        Реализовать регистрацию/авторизацию (по телефону + заглушка для Госуслуг).

    Основные объявления и модерация
        Модель Announcement с полями (тип объявления: животное, товар, услуга, потеряшка, вязка).
        CRUD-операции (состояния: черновик, на проверке, активно, архив).
        Админка с возможностью подтверждать объявления, назначать приюты.

    Навигация, каталог, избранное
        Главное меню (бургер), боковое меню с состояниями (авторизован / нет, продавец / нет).
        Главная страница с промо-баннером, каруселями «Животные» / «Специалисты».
        Страницы каталогов (животные, специалисты, товары), фильтрация.
        Избранное (можно лайкать объявления, переходить в «Избранное»).

    Корзина (для товаров)
        Добавление товаров в корзину, страница корзины, базовое оформление заказа (без сложной оплаты, если не требуется).

    Котопсиндер
        Реализация лайков (односторонних) для животных и специалистов, при лайке — создаём/используем диалог в сообщениях.
        Уведомления об этом лайке.

    Сообщения
        Чат между покупателем и продавцом (прикреплять картинки, геолокацию).
        Табы по типам объявлений: продажа, вязка, потеряшки.
        Кнопка «VIP-консьерж» (если оформлена подписка).

    Регистрация продавца + подписка для специалистов
        Форма сбора реквизитов, полей, загрузка документов.
        При подтверждении — is_seller=True.
        Если «специалист» — оформление подписки (можно сделать фейковую оплату).

    Профили пользователей
        Покупатель: личные данные, адрес, личные питомцы (не на продажу).
        Продавец: портфолио (описание, фото/видео, сертификаты), раздел «Мои объявления».
        Приют: портфолио приюта, реквизиты для пожертвований, функционал добавления животных.

    Отзывы / Рейтинги
        Модель отзывов, возможность комментировать, жаловаться.
        Числовой рейтинг + мини-бейджи.
        Модерация плохих отзывов (<3).

    Вязка (двусторонний лайк)
        Раздел «Вязка», объявления только от владельцев кобелей.
        Для самок нужна обоюдная система лайков. При взаимном лайке — «матч», создаётся чат.

    VIP
        Страница с тремя пакетами (описание услуги).
        При оплате/активации — «VIP-консьерж» в сообщениях.

    Потеряшки
        Отдельный список объявлений (потерянные/найденные животные).
        Создавать может любой пользователь, без оплаты.
        Каталог с фильтрами по месту, породе и т.д.

    Тестирование и запуск
        Проверить флоу пользователя от регистрации до публикации и покупки.
        Проверить логику «стать продавцом», «стать специалистом».
        Проверить работу чатов, лайков (синдер) и отзывов.
        Развернуть на сервере (или локально).

17. Итог

Данный план полностью покрывает всё, что описано в ТЗ:

    Разделение пользователей (покупатели, продавцы, приюты, специалисты).
    Регистрация/авторизация (телефон, Госуслуги).
    Верификация (стать продавцом, загрузка документов, 48 часов на проверку).
    Объявления: продажа (животные/товары/услуги), потеряшки, вязка (двусторонний лайк).
    Тиндер-механика (односторонняя) для животных/специалистов, с чатом.
    Избранное, корзина для товаров.
    Сообщения (мессенджер с табами).
    Рейтинги, отзывы, бейджи, жалобы на отзывы.
    VIP-подписка, приюты с реквизитами для доната.

Таким образом, по данному детальному плану вы можете пошагово реализовать все требуемые функции, не выходя за рамки технического задания.