openapi: 3.0.3
info:
  title: Pappi API
  description: API для платформы Pappi
  version: 1.0.0

servers:
  - url: http://localhost:8000/api
    description: Development server
  - url: https://api.pappi.com
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone:
          type: string
          example: "+79991234567"
        email:
          type: string
          format: email
        is_verified:
          type: boolean
        is_specialist:
          type: boolean
        is_shelter:
          type: boolean
        rating:
          type: number
          format: float

    UserProfile:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        bio:
          type: string
        location:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SellerProfile:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        seller_type:
          type: string
          enum: [individual, entrepreneur, company]
        company_name:
          type: string
        inn:
          type: string
        description:
          type: string
        website:
          type: string
        is_verified:
          type: boolean
        rating:
          type: number
          format: float

    SpecialistProfile:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        specialization:
          type: string
          enum: [veterinarian, groomer, trainer, handler]
        experience_years:
          type: integer
        services:
          type: string
        price_range:
          type: string
        certificates:
          type: object
        is_verified:
          type: boolean
        rating:
          type: number
          format: float

    Announcement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        type:
          type: string
          enum: [animal, service, mating, lost_found]
        status:
          type: string
          enum: [active, inactive, moderation]
        author:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

paths:
  /auth/register:
    post:
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                password:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '201':
          description: Пользователь успешно создан
        '400':
          description: Ошибка валидации

  /auth/verify:
    post:
      summary: Верификация номера телефона
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                code:
                  type: string
      responses:
        '200':
          description: Номер телефона подтвержден
        '400':
          description: Неверный код

  /profile:
    get:
      summary: Получение профиля текущего пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    put:
      summary: Обновление профиля
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: Профиль обновлен

  /announcements:
    get:
      summary: Получение списка объявлений
      parameters:
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: category
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
      responses:
        '200':
          description: Список объявлений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
    post:
      summary: Создание нового объявления
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
      responses:
        '201':
          description: Объявление создано

  /announcements/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: Получение деталей объявления
      responses:
        '200':
          description: Детали объявления
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
    put:
      summary: Обновление объявления
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
      responses:
        '200':
          description: Объявление обновлено
    delete:
      summary: Удаление объявления
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Объявление удалено 