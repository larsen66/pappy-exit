# Generated by Django 5.0.2 on 2025-01-26 15:16

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('announcements', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='animal_type',
            field=models.CharField(default='unknown', max_length=50, verbose_name='Вид животного'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='breed',
            field=models.CharField(blank=True, max_length=100, verbose_name='Порода'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='color',
            field=models.CharField(default='unknown', max_length=50, verbose_name='Основной цвет'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='color_pattern',
            field=models.CharField(choices=[('solid', 'Сплошной'), ('spotted', 'Пятнистый'), ('marble', 'Мраморный'), ('tabby', 'Табби'), ('colorpoint', 'Колорпойнт'), ('tiger', 'Тигровый'), ('gradient', 'Градация'), ('shimmer', 'Шиммер')], default='solid', max_length=50, verbose_name='Тип окраса'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='Контактный email'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='contact_phone',
            field=models.CharField(default='+00000000000', max_length=20, verbose_name='Контактный телефон'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='has_collar',
            field=models.BooleanField(default=False, verbose_name='Есть ошейник'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='has_microchip',
            field=models.BooleanField(default=False, verbose_name='Есть микрочип'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='has_tag',
            field=models.BooleanField(default=False, verbose_name='Есть жетон'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='health_status',
            field=models.CharField(blank=True, choices=[('healthy', 'Здоровое'), ('injured', 'Травмировано'), ('sick', 'Болеет'), ('disability', 'Инвалидность')], max_length=50, verbose_name='Состояние здоровья'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='last_seen_details',
            field=models.TextField(blank=True, verbose_name='Подробности последней встречи'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='last_seen_location',
            field=models.CharField(default='', max_length=255, verbose_name='Место последней встречи'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='latitude',
            field=models.FloatField(blank=True, null=True, verbose_name='Широта'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='longitude',
            field=models.FloatField(blank=True, null=True, verbose_name='Долгота'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='reward_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Сумма вознаграждения'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='search_history',
            field=models.JSONField(blank=True, default=dict, verbose_name='История поиска'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='search_radius',
            field=models.IntegerField(default=5, verbose_name='Радиус поиска (км)'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='size',
            field=models.CharField(choices=[('tiny', 'Игрушечный'), ('small', 'Маленький'), ('medium', 'Средний'), ('large', 'Большой'), ('xlarge', 'Очень большой'), ('giant', 'Гигантский')], default='medium', max_length=20, verbose_name='Размер'),
        ),
        migrations.AddField(
            model_name='lostfoundannouncement',
            name='temperament',
            field=models.CharField(blank=True, choices=[('aggressive', 'Агрессивный'), ('wary', 'Настороженный'), ('calm', 'Спокойный'), ('playful', 'Игровой'), ('active', 'Активный'), ('friendly', 'Дружелюбный'), ('independent', 'Самостоятельный'), ('introverted', 'Интровертированный')], max_length=50, verbose_name='Темперамент'),
        ),
        migrations.AlterField(
            model_name='lostfoundannouncement',
            name='date_lost_found',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время потери/находки'),
        ),
        migrations.AlterField(
            model_name='lostfoundannouncement',
            name='distinctive_features',
            field=models.TextField(default='', verbose_name='Отличительные черты'),
        ),
        migrations.AlterField(
            model_name='lostfoundannouncement',
            name='type',
            field=models.CharField(choices=[('lost', 'Потеряно'), ('found', 'Найдено')], default='lost', max_length=10, verbose_name='Тип'),
        ),
        migrations.AddIndex(
            model_name='lostfoundannouncement',
            index=models.Index(fields=['type', 'date_lost_found'], name='announcemen_type_c4b954_idx'),
        ),
        migrations.AddIndex(
            model_name='lostfoundannouncement',
            index=models.Index(fields=['latitude', 'longitude'], name='announcemen_latitud_dbf029_idx'),
        ),
    ]
